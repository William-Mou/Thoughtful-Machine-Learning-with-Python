X-Account-Key: account5
X-UIDL: GmailId1280367432ef9313
X-Mozilla-Status: 0000
X-Mozilla-Status2: 00000000
X-Mozilla-Keys:                                                                                 
Delivered-To: mlsubscriber.tech@csmining.org
Received: by 10.143.43.17 with SMTP id v17cs451wfj;
        Thu, 15 Apr 2010 14:36:59 -0700 (PDT)
Received: by 10.223.66.204 with SMTP id o12mr269909fai.97.1271367418820;
        Thu, 15 Apr 2010 14:36:58 -0700 (PDT)
Return-Path: <bounce-debian-user=mlsubscriber.tech=csmining.org@lists.debian.org>
Received: from liszt.debian.org (liszt.debian.org [82.195.75.100])
        by mx.google.com with ESMTP id 26si2197660fks.22.2010.04.15.14.36.58;
        Thu, 15 Apr 2010 14:36:58 -0700 (PDT)
Received-SPF: pass (google.com: manual fallback record for domain of bounce-debian-user=mlsubscriber.tech=csmining.org@lists.debian.org designates 82.195.75.100 as permitted sender) client-ip=82.195.75.100;
Authentication-Results: mx.google.com; spf=pass (google.com: manual fallback record for domain of bounce-debian-user=mlsubscriber.tech=csmining.org@lists.debian.org designates 82.195.75.100 as permitted sender) smtp.mail=bounce-debian-user=mlsubscriber.tech=csmining.org@lists.debian.org
Received: from localhost (localhost [127.0.0.1])
	by liszt.debian.org (Postfix) with QMQP
	id D29DD2D0E79; Thu, 15 Apr 2010 21:36:53 +0000 (UTC)
Old-Return-Path: <bss@iguanasuicide.net>
XChecker-Version: SpamAssassin 3.2.5 (2008-06-10) on liszt.debian.org
XLevel: 
XStatus: No, score=-14.6 required=4.0 tests=FOURLA,IMPRONONCABLE_1,
	LDOSUBSCRIBER,LDO_WHITELIST,MURPHY_WRONG_WORD1,MURPHY_WRONG_WORD2,
	PGPSIGNATURE autolearn=failed version=3.2.5
X-Original-To: lists-debian-user@liszt.debian.org
Delivered-To: lists-debian-user@liszt.debian.org
Received: from localhost (localhost [127.0.0.1])
	by liszt.debian.org (Postfix) with ESMTP id 4638F13A5A1F
	for <lists-debian-user@liszt.debian.org>; Thu, 15 Apr 2010 21:36:48 +0000 (UTC)
X-Virus-Scanned: at lists.debian.org with policy bank en-ht
X-AmavisStatus: No, score=-10.6 tagged_above=-10000 required=5.3
	tests=[BAYES_00=-2, FOURLA=0.1, IMPRONONCABLE_1=1, LDO_WHITELIST=-5,
	MURPHY_WRONG_WORD1=0.1, MURPHY_WRONG_WORD2=0.2, PGPSIGNATURE=-5]
	autolearn=ham
Received: from liszt.debian.org ([127.0.0.1])
	by localhost (lists.debian.org [127.0.0.1]) (amavisd-new, port 2525)
	with ESMTP id 05oKoUamDXi1 for <lists-debian-user@liszt.debian.org>;
	Thu, 15 Apr 2010 21:36:40 +0000 (UTC)
X-policyd-weight: using cached result; rate: -6.1
Received: from rei.iguanasuicide.net (rei.iguanasuicide.net [209.20.91.252])
	(using TLSv1 with cipher AES256-SHA (256/256 bits))
	(Client did not present a certificate)
	by liszt.debian.org (Postfix) with ESMTPS id 8898113A444C
	for <debian-user@lists.debian.org>; Thu, 15 Apr 2010 21:36:40 +0000 (UTC)
Received: from 76-220-103-20.lightspeed.fyvlar.sbcglobal.net ([76.220.103.20] helo=dellbuntu.localnet)
	by rei.iguanasuicide.net with esmtpsa (TLS1.0:DHE_DSS_AES_256_CBC_SHA1:32)
	(Exim 4.69)
	(envelope-from <bss@iguanasuicide.net>)
	id 1O2Wjk-0005AW-NR
	for debian-user@lists.debian.org; Thu, 15 Apr 2010 21:36:37 +0000
From: "Boyd Stephen Smith Jr." <bss@iguanasuicide.net>
To: debian-user@lists.debian.org
Subject: Re: C programming question
Date: Thu, 15 Apr 2010 16:39:42 -0500
User-Agent: KMail/1.12.4 (Linux/2.6.31.12-0.2-default; KDE/4.3.5; x86_64; ; )
References: <749326468.47646.1271357760265.JavaMail.root@md01.wow.synacor.com>
In-Reply-To: <749326468.47646.1271357760265.JavaMail.root@md01.wow.synacor.com>
X-Face: ^vamSukCH~ctN{VF@Q-&WG{+0';38cJ]\/:{x0w-b'+GPuWvNg%NAa2SuBw=&"obQ@q;2h
	6&5@)xd86p;wyaJ%f7&z_BW}Dkm.L$-#h%DUdk7thS-HC_A^Jp|#Tq4R/^q/-]wRVU^T?j
	g@-H./`NrG[
X-Eric-Conspiracy: There is no conspiracy.
Face: =?utf-8?q?iVBORw0KGgoAAAANSUhEUgAAADAAAAAwBAMAAAClLOS0AAAAMFBMVEUSKVkSKVkSK?=
 =?utf-8?q?VkSKVkrXb=0A=09grXbgrXbgrXbhEddVEddXI2uzI2uxEddUrXbgSKVlvm9zseJ?=
 =?utf-8?q?LgAAAAC3RSTlMZS96SGZLeS95LGbtQ3=0A=096QAAAI0SURBVDjLbZRNbhQxEIU?=
 =?utf-8?q?9sMsqCWukMNmjITkDN+AacCBW2SH1FXqk3iJRTknZsOlyn8DhAHZj=0A=093iv3Z?=
 =?utf-8?q?CSgNBqN/fxVvfLPhGH4+NlMROpLyPdPwxCGbzkbIsoWs+HzdQgPb83yc7JzcOHPi?=
 =?utf-8?q?xC+mCWbRVs=0A=09pY2lNMMz2FMIOurZpREz4LtPU6qOly/A6G9aW0krjLAJcSg?=
 =?utf-8?q?cICycxRCoXWmurHcKrvHC+eDauR7oWn2=0A=099cQEwExrEXa7/tJlyn9gsC/DhB?=
 =?utf-8?q?dWpreheun7X1KJxybF0zhLwsnsyJ/rU4AbtYPXViyxQNQlrXWTCsJ=0A=096Gud?=
 =?utf-8?q?SNWT0NXblkVuwjBlkWVJrmaAMMJqarlLCgIcWLGGZ3yj+NRXoiqYMZRfnQBQ7VII?=
 =?utf-8?q?iKVYmUnJiyr=0A=09bjfrItJGT9eLq7hgVhV2RTa7R5XNLttjBtQ4ksKF6ESMFERf?=
 =?utf-8?q?OpfZiTzPxYnCNMw1x62G9Y2gUFkeJXo=0A=09NIyLKGpXNrHHeCJMyuaujMNdkt?=
 =?utf-8?q?gkR4+au3MLaBd5cCEc02GrFVlZexk7MzCCV2wzf6OJEzN41d5VtqG=0A=0901oI?=
 =?utf-8?q?hvnx8kkGi5H22edTzHVDci52R6OkAyEnPOnUAfY6NR3iGYSu4qJfPTbS5oo9tOU?=
 =?utf-8?q?MHbdKE23oTci=0A=093cBil8dtoGZk0BF2Yq35wSeWvYeT2EE/KnhRzorfMMgDmH?=
 =?utf-8?q?3vr9szxa5TVz2dBl2dyyRfV6k76A93l6G=0A=098GbPEj2T+kfi/kPAP8D93f6v?=
 =?utf-8?q?uL0H8BCu7v+Jq3ARhvDfGP4AtLxO3F/uHbUAAAAASUVORK5CYII=3D?=
MIME-Version: 1.0
Content-Type: multipart/signed;
  boundary="nextPart11170708.e0Vhl1yEON";
  protocol="application/pgp-signature";
  micalg=pgp-sha1
Content-Transfer-Encoding: 7bit
Message-Id: <201004151639.49356.bss@iguanasuicide.net>
X-Rc-Virus: 2007-09-13_01
X-Rc-Spam: 2008-11-04_01
Resent-Message-ID: <G_L0Vsj-d5.A.es.1b4xLB@liszt>
Resent-From: debian-user@lists.debian.org
X-Mailing-List: <debian-user@lists.debian.org> archive/latest/574212
X-Loop: debian-user@lists.debian.org
List-Id: <debian-user.lists.debian.org>
List-Post: <mailto:debian-user@lists.debian.org>
List-Help: <mailto:debian-user-request@lists.debian.org?subject=help>
List-Subscribe: <mailto:debian-user-request@lists.debian.org?subject=subscribe>
List-Unsubscribe: <mailto:debian-user-request@lists.debian.org?subject=unsubscribe>
Precedence: list
Resent-Sender: debian-user-request@lists.debian.org
Resent-Date: Thu, 15 Apr 2010 21:36:53 +0000 (UTC)

--nextPart11170708.e0Vhl1yEON
Content-Type: Text/Plain;
  charset="utf-8"
Content-Transfer-Encoding: quoted-printable

On Thursday 15 April 2010 13:56:00 Stephen Powell wrote:
> On Wed, 14 Apr 2010 23:10:55 -0400 (EDT), Boyd Stephen Smith Jr. wrote:
> > On Tuesday 13 April 2010 17:16:03 Stephen Powell wrote:
> >> What I need to do is to have two structures overlay each other; so that
> >>  they occupy the same storage.  To be specific, here is a structure
> >> which describes the volume label for an OS-formatted disk:
> >>
> >> struct __attribute__ ((packed)) volume_label {
> >>         char volkey[4];         /* volume key =3D volume label */
> >> ...
> >> };
> >>
> >> And here is a structure which describes the volume label for a
> >>  CMS-formatted disk:
> >>
> >> struct __attribute__ ((packed)) cms_label {
> >>         char label_id[4];       /* Label identifier */
> >> ...
> >> };
> >
> > union any_label {
> > 	struct volume_label vl;
> > 	struct cms_label    cl;
> > };
> >
> >> Note that both structures have as their first member a character
> >> variable of length 4.  In the case of the "volume_label" structure it =
is
> >> "volkey" and in the case of the "cms_label" structure it is "label_id"=
=2E=20
> >> If the value of this variable is "VOL1" (in EBCDIC) then it is the fir=
st
> >> structure which maps the storage.  If the value of this variable is
> >> "CMS1" (in EBCDIC) then it is the second structure which maps the
> >> storage.
> >
> > union any_label *label =3D /* Initialize somehow */;
> > struct volume_label *maybe_vl =3D &label->vl;
> > struct cms_label *maybe_cl =3D &label->cl;
> >
> > if (strncmp(maybe_vl->volkey, "VOL1", 4) =3D=3D 0) {
> >     maybe_cl =3D NULL;
> >     /* Use maybe_vl all you want, e.g. */
> >     maybe_vl->security =3D 0xFF;
> > } else if (strncmp(maybe_cl->label_id, "CMS1", 4) =3D=3D 0) {
> >     maybe_vl =3D NULL;
> >     /* Use maybe_cl all you want, e.g. */
> >     printf("%lu\n", (unsigned long) maybe_cl->disk_offset);
> > } else {
> >     assert(("Unrecognized disk!", 0));
> > }
>=20
> Thanks, Boyd.  Your response comes the closest so far to what I'm looking
> for.  Based on what I know from other programming languages, I don't think
> it's going to be necessary to explicitly declare a union.

It's possible, but I would generally do it for clarity.  I like using the=20
types of variables/arguments as documentation, so I would store any data wh=
ere=20
the real type was unknown in the union.  Then access it though a "struct=20
cms_label *" or "struct volume_label *" one I had determined the correct ty=
pe.

Since C unions are not tagged, a C union is the same size as it's largest=20
member.  (NB: Not really sure how __attribute__((__packed__)) changes thing=
s,=20
if at all; it's possible you need it on the union to prevent padding from=20
being added after the space occupied by the largest member.)

> In short, I need to (a) declare "cms_label" as a based structure,

(above; timmmed)

> (b)
> declare a pointer variable called  "cms_ptr" and associate it with the
> "cms_label" structure,

struct cms_label *cms_ptr;

Initialization optional, but recommended.

> (c) make sure that the compiler does not attempt
> to allocate any storage for the "cms_label" structure,

Since you are declaring a pointer to a structure, and not declaring an obje=
ct=20
with type "struct cms_label", no space will be allocated for a cms_label.

> (d) make sure that
> the compiler automatically acquires storage for the "cms_ptr" pointer
> variable itself,

Make your declaration a definition and that'll be handled.  (Declarations a=
nd=20
definitions look very similar for non-function types; the code given above =
is=20
actually a definition if it is not within a struct/union type.)

> (e) assign the address of the "volume_label" structure
> to the "cms_ptr" pointer variable at an appropriate point in the code,
> and

struct volume_label vl;
struct cms_label *cms_ptr;

/* Load data into vl */
/* Determine that the data is actually a cms_label */
cms_ptr =3D (void *) &vl;

Or, in your specific case, you should be able to do something like:

struct cms_label *cms_ptr =3D (void *) disk_specific->anchor->vlabel;

Since you are already dealing with a "struct volume_label *", there's no ne=
ed=20
for the address-of operator (&).

> (f) make references to the members of the cms_label structure.

cms_ptr->label_id; /* Or any other member. */

> How do I do this?  (Man, I wish I knew C!)

Examples above good?  Please let me know if I can provide further assistanc=
e.
=2D-=20
Boyd Stephen Smith Jr.           	 ,=3D ,-_-. =3D.
bss@iguanasuicide.net            	((_/)o o(\_))
ICQ: 514984 YM/AIM: DaTwinkDaddy 	 `-'(. .)`-'
http://iguanasuicide.net/        	     \_/

--nextPart11170708.e0Vhl1yEON
Content-Type: application/pgp-signature; name=signature.asc 
Content-Description: This is a digitally signed message part.

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.12 (GNU/Linux)

iEYEABECAAYFAkvHh6QACgkQdNbfk+86fC3BAgCeKwmOm9/+NTfXcjN8HW+j/WHP
sykAnRvCenL0IpMvKjq0HIhIxuODBAnq
=/Uj0
-----END PGP SIGNATURE-----

--nextPart11170708.e0Vhl1yEON--


-- 
To UNSUBSCRIBE, email to debian-user-REQUEST@lists.debian.org 
with a subject of "unsubscribe". Trouble? Contact listmaster@lists.debian.org
Archive: http://lists.debian.org/201004151639.49356.bss@iguanasuicide.net


